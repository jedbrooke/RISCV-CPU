01 20 00 93 // addi x1, x0, 0x012
00 C0 90 93 // slli x1, x1, 12
34 50 80 93 // addi x1, x1, 0x345
00 C0 90 93 // slli x1, x1, 12
67 80 80 93 // addi x1, x1, 0x678
00 C0 90 93 // slli x1, x1, 12
9A B0 80 93 // addi x1, x1, 0x9ab
00 C0 90 93 // slli x1, x1, 12
CD E0 80 93 // addi x1, x1, 0xcde
00 40 90 93 // slli x1, x1, 4
00 F0 80 93 // addi x1, x1s, 0xf
00 10 30 23 // sd x1, 0(x0)
00 00 00 93 // addi x1, x0, 0
00 00 01 13 // addi x2, x0, 0
00 80 01 93 // addi x3, x0, 8
00 31 5a 63 // bge x2, x3, END # if x2 != x0 then END
00 01 00 83 // lb x1, 0(x2)
00 01 40 83 // lbu x1, 0(x2)
00 11 01 13 // addi x2, x2, 1
FF 1F F0 6F // jal x0, LOOP  # jump to LOOP and save position to ra
00 00 00 23 // sb x0, 0(x0)
00 00 10 23 // sh x0, 0(x0)
00 00 20 23 // sw x0, 0(x0)
00 00 30 23 // sd x0, 0(x0)
FF FF FF FF // EXIT